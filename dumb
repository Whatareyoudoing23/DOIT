-- Autoweave Script (Script in StarterPlayer > StarterCharacterScripts)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

-- Create RemoteEvents for communication
local ToggleEvent = Instance.new("RemoteEvent")
ToggleEvent.Name = "ToggleEvent"
ToggleEvent.Parent = ReplicatedStorage

local AttackAttempt = Instance.new("RemoteEvent")
AttackAttempt.Name = "AttackAttempt"
AttackAttempt.Parent = ReplicatedStorage

-- Server-side variables
local weaveEnabledStates = {} -- Player -> boolean (autoweave state)
local STUN_DURATION = 1 -- Stun duration for attacker

-- Server: Handle toggle state updates
ToggleEvent.OnServerEvent:Connect(function(player, isEnabled)
    weaveEnabledStates[player] = isEnabled
end)

-- Server: Handle attack attempts
AttackAttempt.OnServerEvent:Connect(function(attacker, target)
    if not attacker.Character or not target.Character then return end
    local attackerHumanoid = attacker.Character:FindFirstChildOfClass("Humanoid")
    local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
    if not attackerHumanoid or not targetHumanoid or attackerHumanoid.Health <= 0 or targetHumanoid.Health <= 0 then return end

    -- Get or create attacker's WeaveStun
    local attackerActionsFolder = attacker.Character:FindFirstChild("Actions") or Instance.new("Folder", attacker.Character)
    attackerActionsFolder.Name = "Actions"
    local attackerWeaveStun = attackerActionsFolder:FindFirstChild("WeaveStun") or Instance.new("BoolValue", attackerActionsFolder)
    attackerWeaveStun.Name = "WeaveStun"
    attackerWeaveStun.Value = attackerWeaveStun.Value or false

    -- Check if attacker is not stunned
    if not attackerWeaveStun.Value then
        if weaveEnabledStates[target] then
            -- Autoweave: Prevent damage and stun attacker
            attackerWeaveStun.Value = true
            task.wait(STUN_DURATION)
            attackerWeaveStun.Value = false -- Reset for next weave
        else
            -- Normal hit (damage would apply here if implemented)
            print(attacker.Name .. " hit " .. target.Name .. " (no autoweave)")
        end
    end
end)

-- Server: Clean up when player leaves
Players.PlayerRemoving:Connect(function(player)
    weaveEnabledStates[player] = nil
end)

-- Client: Handle toggle input and Fight tool logic
if game:GetService("RunService"):IsClient() then
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local isWeaveEnabled = false

    -- Handle toggle input
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.T then
            isWeaveEnabled = not isWeaveEnabled
            print("Autoweave " .. (isWeaveEnabled and "enabled" or "disabled"))
            ToggleEvent:FireServer(isWeaveEnabled)
        end
    end)

    -- Handle character changes (e.g., respawn)
    player.CharacterAdded:Connect(function(newCharacter)
        character = newCharacter
        ToggleEvent:FireServer(isWeaveEnabled)

        -- Re-apply Fight tool handling
        handleFightTool()
    end)

    -- Handle Fight tool activation
    local function handleFightTool()
        local tool = player:FindFirstChild("Backpack"):WaitForChild("Fight", 5) or character:FindFirstChild("Fight")
        if tool then
            local connection
            tool.Activated:Connect(function()
                if not character then return end
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if not humanoid or humanoid.Health <= 0 then return end

                -- Check for WeaveStun on attacker
                local actionsFolder = character:FindFirstChild("Actions") or Instance.new("Folder", character)
                actionsFolder.Name = "Actions"
                local weaveStun = actionsFolder:FindFirstChild("WeaveStun") or Instance.new("BoolValue", actionsFolder)
                weaveStun.Name = "WeaveStun"
                weaveStun.Value = weaveStun.Value or false

                if not weaveStun.Value then
                    -- Use Touched event on attacker's RightHand to detect hits
                    local rightHand = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")
                    if rightHand then
                        connection = rightHand.Touched:Connect(function(hit)
                            local hitCharacter = hit.Parent
                            local hitPlayer = Players:GetPlayerFromCharacter(hitCharacter)
                            if hitPlayer and hitPlayer ~= player then
                                AttackAttempt:FireServer(player, hitPlayer)
                            end
                        end)
                        -- Disconnect after a short time to simulate a punch duration
                        task.wait(0.2)
                        if connection then
                            connection:Disconnect()
                        end
                    end
                end
            end)
        end
    end

    -- Connect Fight tool handling on character load
    handleFightTool()
end

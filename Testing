local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Whitelist of allowed UserIds
local Whitelist = {
    9744028684, -- Add UserId here
    2744508863, -- Add another UserId here
    -- Add more UserIds as needed
}

-- Check if player is whitelisted
local function isWhitelisted(userId)
    for _, id in pairs(Whitelist) do
        if id == userId then
            return true
        end
    end
    return false
end

-- Exit if player is not whitelisted
if not isWhitelisted(LocalPlayer.UserId) then
    LocalPlayer:Kick("You are not authorized to use this script.")
    return
end

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 240)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -120)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui
local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0, 10)
local Title = Instance.new("TextLabel")
Title.Text = "KJ's Hitbox"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.Parent = MainFrame

-- Notification
local Notification = Instance.new("TextLabel", MainFrame)
Notification.Text = "made by KJ"
Notification.Size = UDim2.new(1, 0, 0, 20)
Notification.Position = UDim2.new(0, 0, 1, -20)
Notification.BackgroundTransparency = 1
Notification.TextColor3 = Color3.fromRGB(100, 100, 100)
Notification.Font = Enum.Font.Gotham
Notification.TextSize = 14

-- Transparency Slider
local TransparencyLabel = Instance.new("TextLabel", MainFrame)
TransparencyLabel.Text = "Transparency: 0.4"
TransparencyLabel.Position = UDim2.new(0, 10, 0, 70)
TransparencyLabel.Size = UDim2.new(0, 150, 0, 20)
TransparencyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TransparencyLabel.BackgroundTransparency = 1
local TransparencySlider = Instance.new("TextBox", MainFrame)
TransparencySlider.Position = UDim2.new(0, 170, 0, 70)
TransparencySlider.Size = UDim2.new(0, 50, 0, 20)
TransparencySlider.Text = "0.4"
TransparencySlider.TextColor3 = Color3.fromRGB(255, 255, 255)
TransparencySlider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TransparencySlider.BorderSizePixel = 0

-- Size Slider
local SizeLabel = Instance.new("TextLabel", MainFrame)
SizeLabel.Text = "Size: 2"
SizeLabel.Position = UDim2.new(0, 10, 0, 100)
SizeLabel.Size = UDim2.new(0, 150, 0, 20)
SizeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeLabel.BackgroundTransparency = 1
local SizeSlider = Instance.new("TextBox", MainFrame)
SizeSlider.Position = UDim2.new(0, 170, 0, 100)
SizeSlider.Size = UDim2.new(0, 50, 0, 20)
SizeSlider.Text = "2"
SizeSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeSlider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
SizeSlider.BorderSizePixel = 0

-- Apply Button
local ApplyButton = Instance.new("TextButton", MainFrame)
ApplyButton.Text = "Submit"
ApplyButton.Size = UDim2.new(0, 280, 0, 30)
ApplyButton.Position = UDim2.new(0, 10, 0, 140)
ApplyButton.BackgroundColor3 = Color3.fromRGB(50, 150, 255)
ApplyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ApplyButton.Font = Enum.Font.GothamBold
ApplyButton.TextSize = 16
ApplyButton.BorderSizePixel = 0
local ApplyCorner = Instance.new("UICorner", ApplyButton)
ApplyCorner.CornerRadius = UDim.new(0, 8)

-- Toggle UI with Left Alt
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.LeftAlt and not gameProcessed then
        MainFrame.Visible = not MainFrame.Visible
        
        -- Show Notification
        if MainFrame.Visible then
            Notification.Visible = true
            wait(2)
            Notification.Visible = false
        end
    end
end)

-- Function to Make All Parts Non-Collidable but Maintain Hitbox
local function setAllPartsNonCollidable(character)
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = false -- Disable collisions
            part.CanTouch = true -- Keep touch detection enabled
            part.CanQuery = true -- Keep it queryable for raycasts and detection
        end
    end
end

-- Function to Update Players
local function UpdatePlayers()
    local transparencyValue = tonumber(TransparencySlider.Text) or 0.4
    local sizeValue = tonumber(SizeSlider.Text) or 2
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local Root = player.Character:FindFirstChild("HumanoidRootPart")
            if Root then
                local Size = Vector3.new(sizeValue, sizeValue, sizeValue)
                if Root:IsA("BasePart") then
                    Root.Size = Size
                    Root.Transparency = transparencyValue
                    Root.CanCollide = false -- Ensure HRP does not collide
                    Root.CanTouch = true -- Maintain hitbox interactions
                    Root.CanQuery = true -- Allow raycast interactions
                end
            end
            -- Make all parts non-collidable but still functional
            setAllPartsNonCollidable(player.Character)
        end
    end
end

-- Apply Changes
ApplyButton.MouseButton1Click:Connect(function()
    UpdatePlayers()
end)

-- Auto-Update on Player Join, Leave, and Respawn
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1)
        UpdatePlayers()
    end)
end)
Players.PlayerRemoving:Connect(function()
    wait(1)
    UpdatePlayers()
end)

-- Update every 5 seconds
while true do
    wait(5)
    UpdatePlayers()
end
